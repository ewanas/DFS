%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 69 20 526 771
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, September 14, 2011 8:49:21 PM AST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
103 170 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
103.000 0.00000 l
103.000 170.000 l
0.00000 170.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 103 170 rc
q
[ .500000 0.00000 0.00000 .500000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -262.000 -38.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
262.000 38.0000 m
468.000 38.0000 l
468.000 378.000 l
262.000 378.000 l
262.000 38.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ .500000 0.00000 0.00000 .500000 -131.000 -19.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ .500000 0.00000 0.00000 .500000 -131.000 -19.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ .500000 0.00000 0.00000 .500000 -131.000 -19.0000 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 68.0000 0.00000 0.00000 46.0000 305.251 90.2150 ] concat
<<
/ImageType 1
/Width 34  /Height 23
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [34 0 0 23 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gau1-qbNYn'Z^6YrNJ0Fg,3*a>.&-iajt(WN%*Me3O<>!<BG,('gt;pEg*QZ.EH'f`(Nr1'gY]B<PVgO
/SZ<2d=$S"c#qc6@eS(BiH_'YSF>X2k=GqlBBPLM,_XT3Y/8\h[.L>66B,9HHX$uac7[Q!q_^9_b03d&
\2$3OU8A52m6"NeO8'kk87h;*Vt2"=e'?#kW%g,5'CG3Em?^P5ItoiRZu9t\3;rcQn:>uT8@<E<?-4$d
?Q*!PC):sdPg(4@_HGjI515P:o^B/U(J#tfePN;f"-fs\2jku7e@p/S/"Jh&7UN*(^VM"cNZBY4?UuDs
3"cGiGnYNfJR.EZ2@<#)!ub[-A%g-P68HHfh*&?mSbSHlHmT3^a$Jm-*fM-bY`R*N@^CR\3>.Fn*o1E&
[Q;+_'WK[5lr\Vq8p,A7V+]iCmKnLB!9%r&,)=T5?m1r[![.h5lbsuV]1>C_]-gkojahi^`OXCY:3Ch:
c5&IbK-p<=0Wknoi_VhC^aHmI5QZ:SV`;bYY#ICqWg.7H]_6"u<I>hB)]Wh[\.];$pZ0X#)Oi_''L3cY
-/VkW8LY:;iP'T&C*T/fl[OGtRrmO'F(>MCFU.JYPle.D9tWG<$<''+V!<*E&*;!1'Tl;FA6cZ`.=s8$
7U+i2cmPnK(HauO0LiLu5;l_NR;]4,ch2&q&$>tRCLE!`,*6NR)+rsUR)hn\hl&4C=Emm)cngJpm`Z3e
o[fDYB=bL_)WDE1ng!8=qm+.e"%tN2(cb$bBi)bee;G#Xi[as_7CVjLcmhK!qLsL12afLdM0_>TWJ7p`
-LRgr0Lu.3s'*pJ3m$@j;63A$-)Ii"ZFAIBDf[,ko&_Fto@J[(kRHWeo!U@U[h%QCV8282kn9$A,k2dM
%*97^q0.-t8LY(>j:1t8S#ju%mdN)OM&!/\?[tqS3"A;@$PCE,2K=BQp`gY&=1W$8.<KJ-CE8VBdt3o'
e!Ja]X$(_Dg4Ma]hg?_7=t,8.'`nb"J5%",i>Mt#iQJ=L-,pWJ74sqYG:G('S<Y,?lWqEY1j9DH?-Dli
1-@KuSssP75$7W'*J3OTA%6=<mMg7L2/Tk''31&S/RhUM-Bf=ZY`=a(rltK8oJ@2;W)P8/`PcApm<3h3
RJ]QI4<?Eu$ks'1hM'M4fP!%.2E1[8j.&lB]j>VU;q&\t78^$`LVo8!AkRr4K*/mGn+6>pIhAQd>-2DC
)-n,>7YO/p5;*M%U]!tk//E?!bN4763B7BK!cGL%l#[]cD)N=Gbi]/a<uX&aU%.Ym]QcCUes@PB8C[No
asi#7s&aq@qYr*sIKqTH`;o~>
Q
newpath
329.359 73.2969 m
329.359 74.5469 l
328.953 74.1719 328.526 73.8932 328.078 73.7109  c
327.630 73.5286 327.151 73.4375 326.641 73.4375  c
325.641 73.4375 324.875 73.7448 324.344 74.3594  c
323.812 74.9740 323.547 75.8594 323.547 77.0156  c
323.547 78.1615 323.812 79.0417 324.344 79.6562  c
324.875 80.2708 325.641 80.5781 326.641 80.5781  c
327.151 80.5781 327.630 80.4844 328.078 80.2969  c
328.526 80.1094 328.953 79.8333 329.359 79.4688  c
329.359 80.7031 l
328.943 80.9844 328.503 81.1953 328.039 81.3359  c
327.576 81.4766 327.089 81.5469 326.578 81.5469  c
325.245 81.5469 324.198 81.1406 323.438 80.3281  c
322.677 79.5156 322.297 78.4115 322.297 77.0156  c
322.297 75.6094 322.677 74.5000 323.438 73.6875  c
324.198 72.8750 325.245 72.4688 326.578 72.4688  c
327.099 72.4688 327.591 72.5391 328.055 72.6797  c
328.518 72.8203 328.953 73.0260 329.359 73.2969  c
h
331.125 72.2500 m
332.203 72.2500 l
332.203 81.3750 l
331.125 81.3750 l
331.125 72.2500 l
h
334.453 74.8125 m
335.531 74.8125 l
335.531 81.3750 l
334.453 81.3750 l
334.453 74.8125 l
h
334.453 72.2500 m
335.531 72.2500 l
335.531 73.6250 l
334.453 73.6250 l
334.453 72.2500 l
h
343.422 77.8281 m
343.422 78.3438 l
338.453 78.3438 l
338.505 79.0938 338.732 79.6615 339.133 80.0469  c
339.534 80.4323 340.089 80.6250 340.797 80.6250  c
341.214 80.6250 341.617 80.5755 342.008 80.4766  c
342.398 80.3776 342.786 80.2240 343.172 80.0156  c
343.172 81.0469 l
342.776 81.2031 342.375 81.3255 341.969 81.4141  c
341.562 81.5026 341.151 81.5469 340.734 81.5469  c
339.693 81.5469 338.865 81.2422 338.250 80.6328  c
337.635 80.0234 337.328 79.1979 337.328 78.1562  c
337.328 77.0833 337.620 76.2318 338.203 75.6016  c
338.786 74.9714 339.568 74.6562 340.547 74.6562  c
341.432 74.6562 342.133 74.9401 342.648 75.5078  c
343.164 76.0755 343.422 76.8490 343.422 77.8281  c
h
342.344 77.5000 m
342.333 76.9167 342.167 76.4479 341.844 76.0938  c
341.521 75.7396 341.094 75.5625 340.562 75.5625  c
339.958 75.5625 339.477 75.7344 339.117 76.0781  c
338.758 76.4219 338.552 76.9010 338.500 77.5156  c
342.344 77.5000 l
h
350.641 77.4062 m
350.641 81.3750 l
349.562 81.3750 l
349.562 77.4531 l
349.562 76.8281 349.440 76.3620 349.195 76.0547  c
348.951 75.7474 348.589 75.5938 348.109 75.5938  c
347.526 75.5938 347.065 75.7786 346.727 76.1484  c
346.388 76.5182 346.219 77.0260 346.219 77.6719  c
346.219 81.3750 l
345.141 81.3750 l
345.141 74.8125 l
346.219 74.8125 l
346.219 75.8281 l
346.479 75.4323 346.784 75.1380 347.133 74.9453  c
347.482 74.7526 347.885 74.6562 348.344 74.6562  c
349.094 74.6562 349.664 74.8880 350.055 75.3516  c
350.445 75.8151 350.641 76.5000 350.641 77.4062  c
h
353.859 72.9531 m
353.859 74.8125 l
356.078 74.8125 l
356.078 75.6562 l
353.859 75.6562 l
353.859 79.2188 l
353.859 79.7500 353.932 80.0911 354.078 80.2422  c
354.224 80.3932 354.521 80.4688 354.969 80.4688  c
356.078 80.4688 l
356.078 81.3750 l
354.969 81.3750 l
354.135 81.3750 353.560 81.2188 353.242 80.9062  c
352.924 80.5938 352.766 80.0312 352.766 79.2188  c
352.766 75.6562 l
351.984 75.6562 l
351.984 74.8125 l
352.766 74.8125 l
352.766 72.9531 l
353.859 72.9531 l
h
f
q
[ 36.0000 0.00000 0.00000 60.0000 321.105 266.850 ] concat
<<
/ImageType 1
/Width 18  /Height 30
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [18 0 0 30 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat%`cVBp+&B/"NRjNQ>0'^Rr+E_6n6QeW:>(SUU.1-?:MF^-hL`i?"V@X3D8Spm1lb@1MCYZPiZA\-U
nc\pQS(oZa`ho70iLG8WcC)4oG.[^d)dHZSh;-oCgt_hk'%bae;Vi.al*i92iRds?[9@Jj#,c^E]"G]R
U9MDI5;4e<o.W/CG&_MAIXZaCOA;]6b2m[41rNiXW6aW?=tZ/8fI/aD5!DhG=]n$T<2e>^csj8Y.o:&[
Vl*LB<`i[77c2tTS"#nBn'92gZqr1#lh/rafk.Ps`CAh6d?/lX.[?1?a2c4:(DjQi\"WVFIUZc<HQ%lu
,[i&*#7!s,SEPp9Yct@B\]N9mfke*#XX4[;h;)?b2CW>g,a1glpBi[)-Blgl-oO\bifaEqco3j@1)a1p
=.oa.b&3p4r6U#jq0DV/V56`md[Fu=B4bbKfSE-.7Na_O0X=q92Z-B>U%3T`Lfu9nZ5V<Feq1^\3\A8c
O2ms$&3;s;%HS1I#Srn1@,[Z=GU$lY)AUC2.*o^k13,uqCi&J,8E"MiBI"4A<[nj(@6$o5dF$@e87Dr0
!^\>kDJa7\Nbg8Li:2%Q,>Cm,62c7^-XC(dB7[FG.Ce2OFIe.Q+Xk7nMOZ"M6kkB2LXC6:(FZP278?u4
M[CrD>V>Y?"g?Mc-%N-`Yn<8Tf*W"C"+=]jjJ<'p5b1ZJ7t\G^2Ti#l.bJPqF?X&FOMFnt<N'/SNF+WZ
SQ?.6MZoZA:(>X?.YibPTckgBT(V0rj0RX(%Y$Yc^Y*E=>lr1qPflmH]3WE%D7S3gVY.=cnJNn_#7&Wc
#/bKkI=6OjhVMS4-Bh#aOIW]O%eTMis5T`rBJe_BqsEc&aY!N%bl"gG!VlO+!!~>
Q
newpath
295.297 333.531 m
296.891 333.531 l
300.781 340.844 l
300.781 333.531 l
301.922 333.531 l
301.922 342.281 l
300.328 342.281 l
296.453 334.969 l
296.453 342.281 l
295.297 342.281 l
295.297 333.531 l
h
307.203 338.984 m
306.339 338.984 305.737 339.083 305.398 339.281  c
305.060 339.479 304.891 339.818 304.891 340.297  c
304.891 340.682 305.018 340.987 305.273 341.211  c
305.529 341.435 305.870 341.547 306.297 341.547  c
306.901 341.547 307.383 341.336 307.742 340.914  c
308.102 340.492 308.281 339.927 308.281 339.219  c
308.281 338.984 l
307.203 338.984 l
h
309.359 338.531 m
309.359 342.281 l
308.281 342.281 l
308.281 341.281 l
308.031 341.677 307.724 341.971 307.359 342.164  c
306.995 342.357 306.547 342.453 306.016 342.453  c
305.339 342.453 304.802 342.263 304.406 341.883  c
304.010 341.503 303.812 341.000 303.812 340.375  c
303.812 339.635 304.060 339.078 304.555 338.703  c
305.049 338.328 305.786 338.141 306.766 338.141  c
308.281 338.141 l
308.281 338.031 l
308.281 337.531 308.117 337.146 307.789 336.875  c
307.461 336.604 307.005 336.469 306.422 336.469  c
306.047 336.469 305.680 336.516 305.320 336.609  c
304.961 336.703 304.620 336.839 304.297 337.016  c
304.297 336.016 l
304.693 335.859 305.076 335.745 305.445 335.672  c
305.815 335.599 306.177 335.562 306.531 335.562  c
307.479 335.562 308.188 335.807 308.656 336.297  c
309.125 336.786 309.359 337.531 309.359 338.531  c
h
316.688 336.984 m
316.958 336.495 317.281 336.135 317.656 335.906  c
318.031 335.677 318.474 335.562 318.984 335.562  c
319.672 335.562 320.201 335.802 320.570 336.281  c
320.940 336.760 321.125 337.438 321.125 338.312  c
321.125 342.281 l
320.047 342.281 l
320.047 338.359 l
320.047 337.724 319.935 337.255 319.711 336.953  c
319.487 336.651 319.146 336.500 318.688 336.500  c
318.125 336.500 317.682 336.685 317.359 337.055  c
317.036 337.424 316.875 337.932 316.875 338.578  c
316.875 342.281 l
315.797 342.281 l
315.797 338.359 l
315.797 337.724 315.685 337.255 315.461 336.953  c
315.237 336.651 314.891 336.500 314.422 336.500  c
313.870 336.500 313.432 336.685 313.109 337.055  c
312.786 337.424 312.625 337.932 312.625 338.578  c
312.625 342.281 l
311.547 342.281 l
311.547 335.719 l
312.625 335.719 l
312.625 336.734 l
312.875 336.339 313.172 336.044 313.516 335.852  c
313.859 335.659 314.266 335.562 314.734 335.562  c
315.214 335.562 315.620 335.682 315.953 335.922  c
316.286 336.161 316.531 336.516 316.688 336.984  c
h
323.266 335.719 m
324.344 335.719 l
324.344 342.281 l
323.266 342.281 l
323.266 335.719 l
h
323.266 333.156 m
324.344 333.156 l
324.344 334.531 l
323.266 334.531 l
323.266 333.156 l
h
332.062 338.312 m
332.062 342.281 l
330.984 342.281 l
330.984 338.359 l
330.984 337.734 330.862 337.268 330.617 336.961  c
330.372 336.654 330.010 336.500 329.531 336.500  c
328.948 336.500 328.487 336.685 328.148 337.055  c
327.810 337.424 327.641 337.932 327.641 338.578  c
327.641 342.281 l
326.562 342.281 l
326.562 335.719 l
327.641 335.719 l
327.641 336.734 l
327.901 336.339 328.206 336.044 328.555 335.852  c
328.904 335.659 329.307 335.562 329.766 335.562  c
330.516 335.562 331.086 335.794 331.477 336.258  c
331.867 336.721 332.062 337.406 332.062 338.312  c
h
338.531 338.922 m
338.531 338.141 338.370 337.536 338.047 337.109  c
337.724 336.682 337.271 336.469 336.688 336.469  c
336.115 336.469 335.667 336.682 335.344 337.109  c
335.021 337.536 334.859 338.141 334.859 338.922  c
334.859 339.703 335.021 340.307 335.344 340.734  c
335.667 341.161 336.115 341.375 336.688 341.375  c
337.271 341.375 337.724 341.161 338.047 340.734  c
338.370 340.307 338.531 339.703 338.531 338.922  c
h
339.609 341.469 m
339.609 342.583 339.362 343.414 338.867 343.961  c
338.372 344.508 337.609 344.781 336.578 344.781  c
336.203 344.781 335.846 344.753 335.508 344.695  c
335.169 344.638 334.844 344.552 334.531 344.438  c
334.531 343.391 l
334.844 343.557 335.156 343.682 335.469 343.766  c
335.781 343.849 336.094 343.891 336.406 343.891  c
337.115 343.891 337.646 343.706 338.000 343.336  c
338.354 342.966 338.531 342.406 338.531 341.656  c
338.531 341.125 l
338.302 341.510 338.016 341.799 337.672 341.992  c
337.328 342.185 336.911 342.281 336.422 342.281  c
335.620 342.281 334.971 341.974 334.477 341.359  c
333.982 340.745 333.734 339.932 333.734 338.922  c
333.734 337.911 333.982 337.099 334.477 336.484  c
334.971 335.870 335.620 335.562 336.422 335.562  c
336.911 335.562 337.328 335.659 337.672 335.852  c
338.016 336.044 338.302 336.333 338.531 336.719  c
338.531 335.719 l
339.609 335.719 l
339.609 341.469 l
h
350.938 333.812 m
350.938 334.969 l
350.490 334.760 350.065 334.602 349.664 334.492  c
349.263 334.383 348.880 334.328 348.516 334.328  c
347.870 334.328 347.372 334.453 347.023 334.703  c
346.674 334.953 346.500 335.312 346.500 335.781  c
346.500 336.167 346.615 336.458 346.844 336.656  c
347.073 336.854 347.516 337.010 348.172 337.125  c
348.875 337.281 l
349.760 337.448 350.414 337.742 350.836 338.164  c
351.258 338.586 351.469 339.151 351.469 339.859  c
351.469 340.714 351.185 341.359 350.617 341.797  c
350.049 342.234 349.214 342.453 348.109 342.453  c
347.703 342.453 347.266 342.406 346.797 342.312  c
346.328 342.219 345.844 342.078 345.344 341.891  c
345.344 340.672 l
345.823 340.943 346.294 341.146 346.758 341.281  c
347.221 341.417 347.672 341.484 348.109 341.484  c
348.786 341.484 349.310 341.352 349.680 341.086  c
350.049 340.820 350.234 340.443 350.234 339.953  c
350.234 339.526 350.102 339.190 349.836 338.945  c
349.570 338.701 349.135 338.521 348.531 338.406  c
347.812 338.266 l
346.927 338.089 346.289 337.812 345.898 337.438  c
345.508 337.062 345.312 336.542 345.312 335.875  c
345.312 335.094 345.583 334.482 346.125 334.039  c
346.667 333.596 347.417 333.375 348.375 333.375  c
348.792 333.375 349.211 333.411 349.633 333.484  c
350.055 333.557 350.490 333.667 350.938 333.812  c
h
358.875 338.734 m
358.875 339.250 l
353.906 339.250 l
353.958 340.000 354.185 340.568 354.586 340.953  c
354.987 341.339 355.542 341.531 356.250 341.531  c
356.667 341.531 357.070 341.482 357.461 341.383  c
357.852 341.284 358.240 341.130 358.625 340.922  c
358.625 341.953 l
358.229 342.109 357.828 342.232 357.422 342.320  c
357.016 342.409 356.604 342.453 356.188 342.453  c
355.146 342.453 354.318 342.148 353.703 341.539  c
353.089 340.930 352.781 340.104 352.781 339.062  c
352.781 337.990 353.073 337.138 353.656 336.508  c
354.240 335.878 355.021 335.562 356.000 335.562  c
356.885 335.562 357.586 335.846 358.102 336.414  c
358.617 336.982 358.875 337.755 358.875 338.734  c
h
357.797 338.406 m
357.786 337.823 357.620 337.354 357.297 337.000  c
356.974 336.646 356.547 336.469 356.016 336.469  c
355.411 336.469 354.930 336.641 354.570 336.984  c
354.211 337.328 354.005 337.807 353.953 338.422  c
357.797 338.406 l
h
364.453 336.719 m
364.328 336.656 364.195 336.607 364.055 336.570  c
363.914 336.534 363.755 336.516 363.578 336.516  c
362.974 336.516 362.508 336.714 362.180 337.109  c
361.852 337.505 361.688 338.078 361.688 338.828  c
361.688 342.281 l
360.609 342.281 l
360.609 335.719 l
361.688 335.719 l
361.688 336.734 l
361.917 336.339 362.214 336.044 362.578 335.852  c
362.943 335.659 363.385 335.562 363.906 335.562  c
363.979 335.562 364.060 335.568 364.148 335.578  c
364.237 335.589 364.333 335.604 364.438 335.625  c
364.453 336.719 l
h
364.812 335.719 m
365.953 335.719 l
368.000 341.219 l
370.062 335.719 l
371.203 335.719 l
368.734 342.281 l
367.266 342.281 l
364.812 335.719 l
h
378.297 338.734 m
378.297 339.250 l
373.328 339.250 l
373.380 340.000 373.607 340.568 374.008 340.953  c
374.409 341.339 374.964 341.531 375.672 341.531  c
376.089 341.531 376.492 341.482 376.883 341.383  c
377.273 341.284 377.661 341.130 378.047 340.922  c
378.047 341.953 l
377.651 342.109 377.250 342.232 376.844 342.320  c
376.438 342.409 376.026 342.453 375.609 342.453  c
374.568 342.453 373.740 342.148 373.125 341.539  c
372.510 340.930 372.203 340.104 372.203 339.062  c
372.203 337.990 372.495 337.138 373.078 336.508  c
373.661 335.878 374.443 335.562 375.422 335.562  c
376.307 335.562 377.008 335.846 377.523 336.414  c
378.039 336.982 378.297 337.755 378.297 338.734  c
h
377.219 338.406 m
377.208 337.823 377.042 337.354 376.719 337.000  c
376.396 336.646 375.969 336.469 375.438 336.469  c
374.833 336.469 374.352 336.641 373.992 336.984  c
373.633 337.328 373.427 337.807 373.375 338.422  c
377.219 338.406 l
h
383.875 336.719 m
383.750 336.656 383.617 336.607 383.477 336.570  c
383.336 336.534 383.177 336.516 383.000 336.516  c
382.396 336.516 381.930 336.714 381.602 337.109  c
381.273 337.505 381.109 338.078 381.109 338.828  c
381.109 342.281 l
380.031 342.281 l
380.031 335.719 l
381.109 335.719 l
381.109 336.734 l
381.339 336.339 381.635 336.044 382.000 335.852  c
382.365 335.659 382.807 335.562 383.328 335.562  c
383.401 335.562 383.482 335.568 383.570 335.578  c
383.659 335.589 383.755 335.604 383.859 335.625  c
383.875 336.719 l
h
f
0 J
1.45000 M
newpath
339.000 135.741 m
339.000 258.851 l
S
newpath
339.000 266.851 m
344.000 254.851 l
339.000 257.851 l
334.000 254.851 l
h
f
newpath
348.859 171.219 m
348.859 172.234 l
348.547 172.057 348.240 171.927 347.938 171.844  c
347.635 171.760 347.328 171.719 347.016 171.719  c
346.307 171.719 345.760 171.940 345.375 172.383  c
344.990 172.826 344.797 173.448 344.797 174.250  c
344.797 175.052 344.990 175.674 345.375 176.117  c
345.760 176.560 346.307 176.781 347.016 176.781  c
347.328 176.781 347.635 176.740 347.938 176.656  c
348.240 176.573 348.547 176.448 348.859 176.281  c
348.859 177.281 l
348.557 177.417 348.245 177.521 347.922 177.594  c
347.599 177.667 347.255 177.703 346.891 177.703  c
345.901 177.703 345.115 177.393 344.531 176.773  c
343.948 176.154 343.656 175.312 343.656 174.250  c
343.656 173.188 343.951 172.349 344.539 171.734  c
345.128 171.120 345.938 170.812 346.969 170.812  c
347.292 170.812 347.612 170.846 347.930 170.914  c
348.247 170.982 348.557 171.083 348.859 171.219  c
h
354.531 171.969 m
354.406 171.906 354.273 171.857 354.133 171.820  c
353.992 171.784 353.833 171.766 353.656 171.766  c
353.052 171.766 352.586 171.964 352.258 172.359  c
351.930 172.755 351.766 173.328 351.766 174.078  c
351.766 177.531 l
350.688 177.531 l
350.688 170.969 l
351.766 170.969 l
351.766 171.984 l
351.995 171.589 352.292 171.294 352.656 171.102  c
353.021 170.909 353.464 170.812 353.984 170.812  c
354.057 170.812 354.138 170.818 354.227 170.828  c
354.315 170.839 354.411 170.854 354.516 170.875  c
354.531 171.969 l
h
361.281 173.984 m
361.281 174.500 l
356.312 174.500 l
356.365 175.250 356.591 175.818 356.992 176.203  c
357.393 176.589 357.948 176.781 358.656 176.781  c
359.073 176.781 359.477 176.732 359.867 176.633  c
360.258 176.534 360.646 176.380 361.031 176.172  c
361.031 177.203 l
360.635 177.359 360.234 177.482 359.828 177.570  c
359.422 177.659 359.010 177.703 358.594 177.703  c
357.552 177.703 356.724 177.398 356.109 176.789  c
355.495 176.180 355.188 175.354 355.188 174.312  c
355.188 173.240 355.479 172.388 356.062 171.758  c
356.646 171.128 357.427 170.812 358.406 170.812  c
359.292 170.812 359.992 171.096 360.508 171.664  c
361.023 172.232 361.281 173.005 361.281 173.984  c
h
360.203 173.656 m
360.193 173.073 360.026 172.604 359.703 172.250  c
359.380 171.896 358.953 171.719 358.422 171.719  c
357.818 171.719 357.336 171.891 356.977 172.234  c
356.617 172.578 356.411 173.057 356.359 173.672  c
360.203 173.656 l
h
366.016 174.234 m
365.151 174.234 364.549 174.333 364.211 174.531  c
363.872 174.729 363.703 175.068 363.703 175.547  c
363.703 175.932 363.831 176.237 364.086 176.461  c
364.341 176.685 364.682 176.797 365.109 176.797  c
365.714 176.797 366.195 176.586 366.555 176.164  c
366.914 175.742 367.094 175.177 367.094 174.469  c
367.094 174.234 l
366.016 174.234 l
h
368.172 173.781 m
368.172 177.531 l
367.094 177.531 l
367.094 176.531 l
366.844 176.927 366.536 177.221 366.172 177.414  c
365.807 177.607 365.359 177.703 364.828 177.703  c
364.151 177.703 363.615 177.513 363.219 177.133  c
362.823 176.753 362.625 176.250 362.625 175.625  c
362.625 174.885 362.872 174.328 363.367 173.953  c
363.862 173.578 364.599 173.391 365.578 173.391  c
367.094 173.391 l
367.094 173.281 l
367.094 172.781 366.930 172.396 366.602 172.125  c
366.273 171.854 365.818 171.719 365.234 171.719  c
364.859 171.719 364.492 171.766 364.133 171.859  c
363.773 171.953 363.432 172.089 363.109 172.266  c
363.109 171.266 l
363.505 171.109 363.888 170.995 364.258 170.922  c
364.628 170.849 364.990 170.812 365.344 170.812  c
366.292 170.812 367.000 171.057 367.469 171.547  c
367.938 172.036 368.172 172.781 368.172 173.781  c
h
371.469 169.109 m
371.469 170.969 l
373.688 170.969 l
373.688 171.812 l
371.469 171.812 l
371.469 175.375 l
371.469 175.906 371.542 176.247 371.688 176.398  c
371.833 176.549 372.130 176.625 372.578 176.625  c
373.688 176.625 l
373.688 177.531 l
372.578 177.531 l
371.745 177.531 371.169 177.375 370.852 177.062  c
370.534 176.750 370.375 176.188 370.375 175.375  c
370.375 171.812 l
369.594 171.812 l
369.594 170.969 l
370.375 170.969 l
370.375 169.109 l
371.469 169.109 l
h
380.719 173.984 m
380.719 174.500 l
375.750 174.500 l
375.802 175.250 376.029 175.818 376.430 176.203  c
376.831 176.589 377.385 176.781 378.094 176.781  c
378.510 176.781 378.914 176.732 379.305 176.633  c
379.695 176.534 380.083 176.380 380.469 176.172  c
380.469 177.203 l
380.073 177.359 379.672 177.482 379.266 177.570  c
378.859 177.659 378.448 177.703 378.031 177.703  c
376.990 177.703 376.161 177.398 375.547 176.789  c
374.932 176.180 374.625 175.354 374.625 174.312  c
374.625 173.240 374.917 172.388 375.500 171.758  c
376.083 171.128 376.865 170.812 377.844 170.812  c
378.729 170.812 379.430 171.096 379.945 171.664  c
380.461 172.232 380.719 173.005 380.719 173.984  c
h
379.641 173.656 m
379.630 173.073 379.464 172.604 379.141 172.250  c
378.818 171.896 378.391 171.719 377.859 171.719  c
377.255 171.719 376.773 171.891 376.414 172.234  c
376.055 172.578 375.849 173.057 375.797 173.672  c
379.641 173.656 l
h
383.703 169.750 m
383.703 176.562 l
385.141 176.562 l
386.349 176.562 387.232 176.289 387.789 175.742  c
388.346 175.195 388.625 174.328 388.625 173.141  c
388.625 171.974 388.346 171.117 387.789 170.570  c
387.232 170.023 386.349 169.750 385.141 169.750  c
383.703 169.750 l
h
382.516 168.781 m
384.953 168.781 l
386.651 168.781 387.896 169.133 388.688 169.836  c
389.479 170.539 389.875 171.641 389.875 173.141  c
389.875 174.651 389.477 175.760 388.680 176.469  c
387.883 177.177 386.641 177.531 384.953 177.531  c
382.516 177.531 l
382.516 168.781 l
h
391.719 170.969 m
392.797 170.969 l
392.797 177.531 l
391.719 177.531 l
391.719 170.969 l
h
391.719 168.406 m
392.797 168.406 l
392.797 169.781 l
391.719 169.781 l
391.719 168.406 l
h
398.859 171.969 m
398.734 171.906 398.602 171.857 398.461 171.820  c
398.320 171.784 398.161 171.766 397.984 171.766  c
397.380 171.766 396.914 171.964 396.586 172.359  c
396.258 172.755 396.094 173.328 396.094 174.078  c
396.094 177.531 l
395.016 177.531 l
395.016 170.969 l
396.094 170.969 l
396.094 171.984 l
396.323 171.589 396.620 171.294 396.984 171.102  c
397.349 170.909 397.792 170.812 398.312 170.812  c
398.385 170.812 398.466 170.818 398.555 170.828  c
398.643 170.839 398.740 170.854 398.844 170.875  c
398.859 171.969 l
h
405.609 173.984 m
405.609 174.500 l
400.641 174.500 l
400.693 175.250 400.919 175.818 401.320 176.203  c
401.721 176.589 402.276 176.781 402.984 176.781  c
403.401 176.781 403.805 176.732 404.195 176.633  c
404.586 176.534 404.974 176.380 405.359 176.172  c
405.359 177.203 l
404.964 177.359 404.562 177.482 404.156 177.570  c
403.750 177.659 403.339 177.703 402.922 177.703  c
401.880 177.703 401.052 177.398 400.438 176.789  c
399.823 176.180 399.516 175.354 399.516 174.312  c
399.516 173.240 399.807 172.388 400.391 171.758  c
400.974 171.128 401.755 170.812 402.734 170.812  c
403.620 170.812 404.320 171.096 404.836 171.664  c
405.352 172.232 405.609 173.005 405.609 173.984  c
h
404.531 173.656 m
404.521 173.073 404.354 172.604 404.031 172.250  c
403.708 171.896 403.281 171.719 402.750 171.719  c
402.146 171.719 401.664 171.891 401.305 172.234  c
400.945 172.578 400.740 173.057 400.688 173.672  c
404.531 173.656 l
h
412.094 171.219 m
412.094 172.234 l
411.781 172.057 411.474 171.927 411.172 171.844  c
410.870 171.760 410.562 171.719 410.250 171.719  c
409.542 171.719 408.995 171.940 408.609 172.383  c
408.224 172.826 408.031 173.448 408.031 174.250  c
408.031 175.052 408.224 175.674 408.609 176.117  c
408.995 176.560 409.542 176.781 410.250 176.781  c
410.562 176.781 410.870 176.740 411.172 176.656  c
411.474 176.573 411.781 176.448 412.094 176.281  c
412.094 177.281 l
411.792 177.417 411.479 177.521 411.156 177.594  c
410.833 177.667 410.490 177.703 410.125 177.703  c
409.135 177.703 408.349 177.393 407.766 176.773  c
407.182 176.154 406.891 175.312 406.891 174.250  c
406.891 173.188 407.185 172.349 407.773 171.734  c
408.362 171.120 409.172 170.812 410.203 170.812  c
410.526 170.812 410.846 170.846 411.164 170.914  c
411.482 170.982 411.792 171.083 412.094 171.219  c
h
415.047 169.109 m
415.047 170.969 l
417.266 170.969 l
417.266 171.812 l
415.047 171.812 l
415.047 175.375 l
415.047 175.906 415.120 176.247 415.266 176.398  c
415.411 176.549 415.708 176.625 416.156 176.625  c
417.266 176.625 l
417.266 177.531 l
416.156 177.531 l
415.323 177.531 414.747 177.375 414.430 177.062  c
414.112 176.750 413.953 176.188 413.953 175.375  c
413.953 171.812 l
413.172 171.812 l
413.172 170.969 l
413.953 170.969 l
413.953 169.109 l
415.047 169.109 l
h
421.219 171.719 m
420.646 171.719 420.190 171.945 419.852 172.398  c
419.513 172.852 419.344 173.469 419.344 174.250  c
419.344 175.042 419.510 175.661 419.844 176.109  c
420.177 176.557 420.635 176.781 421.219 176.781  c
421.792 176.781 422.247 176.555 422.586 176.102  c
422.924 175.648 423.094 175.031 423.094 174.250  c
423.094 173.479 422.924 172.865 422.586 172.406  c
422.247 171.948 421.792 171.719 421.219 171.719  c
h
421.219 170.812 m
422.156 170.812 422.893 171.117 423.430 171.727  c
423.966 172.336 424.234 173.177 424.234 174.250  c
424.234 175.323 423.966 176.167 423.430 176.781  c
422.893 177.396 422.156 177.703 421.219 177.703  c
420.281 177.703 419.544 177.396 419.008 176.781  c
418.471 176.167 418.203 175.323 418.203 174.250  c
418.203 173.177 418.471 172.336 419.008 171.727  c
419.544 171.117 420.281 170.812 421.219 170.812  c
h
429.828 171.969 m
429.703 171.906 429.570 171.857 429.430 171.820  c
429.289 171.784 429.130 171.766 428.953 171.766  c
428.349 171.766 427.883 171.964 427.555 172.359  c
427.227 172.755 427.062 173.328 427.062 174.078  c
427.062 177.531 l
425.984 177.531 l
425.984 170.969 l
427.062 170.969 l
427.062 171.984 l
427.292 171.589 427.589 171.294 427.953 171.102  c
428.318 170.909 428.760 170.812 429.281 170.812  c
429.354 170.812 429.435 170.818 429.523 170.828  c
429.612 170.839 429.708 170.854 429.812 170.875  c
429.828 171.969 l
h
433.672 178.141 m
433.370 178.922 433.073 179.432 432.781 179.672  c
432.490 179.911 432.104 180.031 431.625 180.031  c
430.766 180.031 l
430.766 179.125 l
431.391 179.125 l
431.693 179.125 431.924 179.055 432.086 178.914  c
432.247 178.773 432.427 178.443 432.625 177.922  c
432.828 177.422 l
430.172 170.969 l
431.312 170.969 l
433.359 176.094 l
435.422 170.969 l
436.562 170.969 l
433.672 178.141 l
h
f
newpath
358.500 184.938 m
359.578 184.938 l
359.578 191.500 l
358.500 191.500 l
358.500 184.938 l
h
358.500 182.375 m
359.578 182.375 l
359.578 183.750 l
358.500 183.750 l
358.500 182.375 l
h
366.031 185.125 m
366.031 186.156 l
365.729 186.000 365.414 185.883 365.086 185.805  c
364.758 185.727 364.417 185.688 364.062 185.688  c
363.531 185.688 363.130 185.768 362.859 185.930  c
362.589 186.091 362.453 186.339 362.453 186.672  c
362.453 186.922 362.549 187.117 362.742 187.258  c
362.935 187.398 363.323 187.531 363.906 187.656  c
364.266 187.750 l
365.036 187.906 365.583 188.135 365.906 188.438  c
366.229 188.740 366.391 189.156 366.391 189.688  c
366.391 190.302 366.148 190.786 365.664 191.141  c
365.180 191.495 364.516 191.672 363.672 191.672  c
363.318 191.672 362.951 191.638 362.570 191.570  c
362.190 191.503 361.792 191.401 361.375 191.266  c
361.375 190.141 l
361.771 190.349 362.161 190.505 362.547 190.609  c
362.932 190.714 363.318 190.766 363.703 190.766  c
364.203 190.766 364.591 190.680 364.867 190.508  c
365.143 190.336 365.281 190.089 365.281 189.766  c
365.281 189.474 365.182 189.250 364.984 189.094  c
364.786 188.938 364.354 188.786 363.688 188.641  c
363.312 188.562 l
362.646 188.417 362.164 188.198 361.867 187.906  c
361.570 187.615 361.422 187.219 361.422 186.719  c
361.422 186.094 361.641 185.615 362.078 185.281  c
362.516 184.948 363.135 184.781 363.938 184.781  c
364.333 184.781 364.708 184.810 365.062 184.867  c
365.417 184.924 365.740 185.010 366.031 185.125  c
h
369.328 183.719 m
369.328 190.531 l
370.766 190.531 l
371.974 190.531 372.857 190.258 373.414 189.711  c
373.971 189.164 374.250 188.297 374.250 187.109  c
374.250 185.943 373.971 185.086 373.414 184.539  c
372.857 183.992 371.974 183.719 370.766 183.719  c
369.328 183.719 l
h
368.141 182.750 m
370.578 182.750 l
372.276 182.750 373.521 183.102 374.312 183.805  c
375.104 184.508 375.500 185.609 375.500 187.109  c
375.500 188.620 375.102 189.729 374.305 190.438  c
373.508 191.146 372.266 191.500 370.578 191.500  c
368.141 191.500 l
368.141 182.750 l
h
377.328 184.938 m
378.406 184.938 l
378.406 191.500 l
377.328 191.500 l
377.328 184.938 l
h
377.328 182.375 m
378.406 182.375 l
378.406 183.750 l
377.328 183.750 l
377.328 182.375 l
h
384.469 185.938 m
384.344 185.875 384.211 185.826 384.070 185.789  c
383.930 185.753 383.771 185.734 383.594 185.734  c
382.990 185.734 382.523 185.932 382.195 186.328  c
381.867 186.724 381.703 187.297 381.703 188.047  c
381.703 191.500 l
380.625 191.500 l
380.625 184.938 l
381.703 184.938 l
381.703 185.953 l
381.932 185.557 382.229 185.263 382.594 185.070  c
382.958 184.878 383.401 184.781 383.922 184.781  c
383.995 184.781 384.076 184.786 384.164 184.797  c
384.253 184.807 384.349 184.823 384.453 184.844  c
384.469 185.938 l
h
391.219 187.953 m
391.219 188.469 l
386.250 188.469 l
386.302 189.219 386.529 189.786 386.930 190.172  c
387.331 190.557 387.885 190.750 388.594 190.750  c
389.010 190.750 389.414 190.701 389.805 190.602  c
390.195 190.503 390.583 190.349 390.969 190.141  c
390.969 191.172 l
390.573 191.328 390.172 191.451 389.766 191.539  c
389.359 191.628 388.948 191.672 388.531 191.672  c
387.490 191.672 386.661 191.367 386.047 190.758  c
385.432 190.148 385.125 189.323 385.125 188.281  c
385.125 187.208 385.417 186.357 386.000 185.727  c
386.583 185.096 387.365 184.781 388.344 184.781  c
389.229 184.781 389.930 185.065 390.445 185.633  c
390.961 186.201 391.219 186.974 391.219 187.953  c
h
390.141 187.625 m
390.130 187.042 389.964 186.573 389.641 186.219  c
389.318 185.865 388.891 185.688 388.359 185.688  c
387.755 185.688 387.273 185.859 386.914 186.203  c
386.555 186.547 386.349 187.026 386.297 187.641  c
390.141 187.625 l
h
397.719 185.188 m
397.719 186.203 l
397.406 186.026 397.099 185.896 396.797 185.812  c
396.495 185.729 396.188 185.688 395.875 185.688  c
395.167 185.688 394.620 185.909 394.234 186.352  c
393.849 186.794 393.656 187.417 393.656 188.219  c
393.656 189.021 393.849 189.643 394.234 190.086  c
394.620 190.529 395.167 190.750 395.875 190.750  c
396.188 190.750 396.495 190.708 396.797 190.625  c
397.099 190.542 397.406 190.417 397.719 190.250  c
397.719 191.250 l
397.417 191.385 397.104 191.490 396.781 191.562  c
396.458 191.635 396.115 191.672 395.750 191.672  c
394.760 191.672 393.974 191.362 393.391 190.742  c
392.807 190.122 392.516 189.281 392.516 188.219  c
392.516 187.156 392.810 186.318 393.398 185.703  c
393.987 185.089 394.797 184.781 395.828 184.781  c
396.151 184.781 396.471 184.815 396.789 184.883  c
397.107 184.951 397.417 185.052 397.719 185.188  c
h
400.656 183.078 m
400.656 184.938 l
402.875 184.938 l
402.875 185.781 l
400.656 185.781 l
400.656 189.344 l
400.656 189.875 400.729 190.216 400.875 190.367  c
401.021 190.518 401.318 190.594 401.766 190.594  c
402.875 190.594 l
402.875 191.500 l
401.766 191.500 l
400.932 191.500 400.357 191.344 400.039 191.031  c
399.721 190.719 399.562 190.156 399.562 189.344  c
399.562 185.781 l
398.781 185.781 l
398.781 184.938 l
399.562 184.938 l
399.562 183.078 l
400.656 183.078 l
h
406.828 185.688 m
406.255 185.688 405.799 185.914 405.461 186.367  c
405.122 186.820 404.953 187.438 404.953 188.219  c
404.953 189.010 405.120 189.630 405.453 190.078  c
405.786 190.526 406.245 190.750 406.828 190.750  c
407.401 190.750 407.857 190.523 408.195 190.070  c
408.534 189.617 408.703 189.000 408.703 188.219  c
408.703 187.448 408.534 186.833 408.195 186.375  c
407.857 185.917 407.401 185.688 406.828 185.688  c
h
406.828 184.781 m
407.766 184.781 408.503 185.086 409.039 185.695  c
409.576 186.305 409.844 187.146 409.844 188.219  c
409.844 189.292 409.576 190.135 409.039 190.750  c
408.503 191.365 407.766 191.672 406.828 191.672  c
405.891 191.672 405.154 191.365 404.617 190.750  c
404.081 190.135 403.812 189.292 403.812 188.219  c
403.812 187.146 404.081 186.305 404.617 185.695  c
405.154 185.086 405.891 184.781 406.828 184.781  c
h
415.438 185.938 m
415.312 185.875 415.180 185.826 415.039 185.789  c
414.898 185.753 414.740 185.734 414.562 185.734  c
413.958 185.734 413.492 185.932 413.164 186.328  c
412.836 186.724 412.672 187.297 412.672 188.047  c
412.672 191.500 l
411.594 191.500 l
411.594 184.938 l
412.672 184.938 l
412.672 185.953 l
412.901 185.557 413.198 185.263 413.562 185.070  c
413.927 184.878 414.370 184.781 414.891 184.781  c
414.964 184.781 415.044 184.786 415.133 184.797  c
415.221 184.807 415.318 184.823 415.422 184.844  c
415.438 185.938 l
h
419.297 192.109 m
418.995 192.891 418.698 193.401 418.406 193.641  c
418.115 193.880 417.729 194.000 417.250 194.000  c
416.391 194.000 l
416.391 193.094 l
417.016 193.094 l
417.318 193.094 417.549 193.023 417.711 192.883  c
417.872 192.742 418.052 192.411 418.250 191.891  c
418.453 191.391 l
415.797 184.938 l
416.938 184.938 l
418.984 190.062 l
421.047 184.938 l
422.188 184.938 l
419.297 192.109 l
h
f
newpath
366.156 199.156 m
366.156 200.172 l
365.844 199.995 365.536 199.865 365.234 199.781  c
364.932 199.698 364.625 199.656 364.312 199.656  c
363.604 199.656 363.057 199.878 362.672 200.320  c
362.286 200.763 362.094 201.385 362.094 202.188  c
362.094 202.990 362.286 203.612 362.672 204.055  c
363.057 204.497 363.604 204.719 364.312 204.719  c
364.625 204.719 364.932 204.677 365.234 204.594  c
365.536 204.510 365.844 204.385 366.156 204.219  c
366.156 205.219 l
365.854 205.354 365.542 205.458 365.219 205.531  c
364.896 205.604 364.552 205.641 364.188 205.641  c
363.198 205.641 362.411 205.331 361.828 204.711  c
361.245 204.091 360.953 203.250 360.953 202.188  c
360.953 201.125 361.247 200.286 361.836 199.672  c
362.424 199.057 363.234 198.750 364.266 198.750  c
364.589 198.750 364.909 198.784 365.227 198.852  c
365.544 198.919 365.854 199.021 366.156 199.156  c
h
371.844 199.906 m
371.719 199.844 371.586 199.794 371.445 199.758  c
371.305 199.721 371.146 199.703 370.969 199.703  c
370.365 199.703 369.898 199.901 369.570 200.297  c
369.242 200.693 369.078 201.266 369.078 202.016  c
369.078 205.469 l
368.000 205.469 l
368.000 198.906 l
369.078 198.906 l
369.078 199.922 l
369.307 199.526 369.604 199.232 369.969 199.039  c
370.333 198.846 370.776 198.750 371.297 198.750  c
371.370 198.750 371.451 198.755 371.539 198.766  c
371.628 198.776 371.724 198.792 371.828 198.812  c
371.844 199.906 l
h
378.578 201.922 m
378.578 202.438 l
373.609 202.438 l
373.661 203.188 373.888 203.755 374.289 204.141  c
374.690 204.526 375.245 204.719 375.953 204.719  c
376.370 204.719 376.773 204.669 377.164 204.570  c
377.555 204.471 377.943 204.318 378.328 204.109  c
378.328 205.141 l
377.932 205.297 377.531 205.419 377.125 205.508  c
376.719 205.596 376.307 205.641 375.891 205.641  c
374.849 205.641 374.021 205.336 373.406 204.727  c
372.792 204.117 372.484 203.292 372.484 202.250  c
372.484 201.177 372.776 200.326 373.359 199.695  c
373.943 199.065 374.724 198.750 375.703 198.750  c
376.589 198.750 377.289 199.034 377.805 199.602  c
378.320 200.169 378.578 200.943 378.578 201.922  c
h
377.500 201.594 m
377.490 201.010 377.323 200.542 377.000 200.188  c
376.677 199.833 376.250 199.656 375.719 199.656  c
375.115 199.656 374.633 199.828 374.273 200.172  c
373.914 200.516 373.708 200.995 373.656 201.609  c
377.500 201.594 l
h
383.328 202.172 m
382.464 202.172 381.862 202.271 381.523 202.469  c
381.185 202.667 381.016 203.005 381.016 203.484  c
381.016 203.870 381.143 204.174 381.398 204.398  c
381.654 204.622 381.995 204.734 382.422 204.734  c
383.026 204.734 383.508 204.523 383.867 204.102  c
384.227 203.680 384.406 203.115 384.406 202.406  c
384.406 202.172 l
383.328 202.172 l
h
385.484 201.719 m
385.484 205.469 l
384.406 205.469 l
384.406 204.469 l
384.156 204.865 383.849 205.159 383.484 205.352  c
383.120 205.544 382.672 205.641 382.141 205.641  c
381.464 205.641 380.927 205.451 380.531 205.070  c
380.135 204.690 379.938 204.188 379.938 203.562  c
379.938 202.823 380.185 202.266 380.680 201.891  c
381.174 201.516 381.911 201.328 382.891 201.328  c
384.406 201.328 l
384.406 201.219 l
384.406 200.719 384.242 200.333 383.914 200.062  c
383.586 199.792 383.130 199.656 382.547 199.656  c
382.172 199.656 381.805 199.703 381.445 199.797  c
381.086 199.891 380.745 200.026 380.422 200.203  c
380.422 199.203 l
380.818 199.047 381.201 198.932 381.570 198.859  c
381.940 198.786 382.302 198.750 382.656 198.750  c
383.604 198.750 384.312 198.995 384.781 199.484  c
385.250 199.974 385.484 200.719 385.484 201.719  c
h
388.766 197.047 m
388.766 198.906 l
390.984 198.906 l
390.984 199.750 l
388.766 199.750 l
388.766 203.312 l
388.766 203.844 388.839 204.185 388.984 204.336  c
389.130 204.487 389.427 204.562 389.875 204.562  c
390.984 204.562 l
390.984 205.469 l
389.875 205.469 l
389.042 205.469 388.466 205.312 388.148 205.000  c
387.831 204.688 387.672 204.125 387.672 203.312  c
387.672 199.750 l
386.891 199.750 l
386.891 198.906 l
387.672 198.906 l
387.672 197.047 l
388.766 197.047 l
h
398.031 201.922 m
398.031 202.438 l
393.062 202.438 l
393.115 203.188 393.341 203.755 393.742 204.141  c
394.143 204.526 394.698 204.719 395.406 204.719  c
395.823 204.719 396.227 204.669 396.617 204.570  c
397.008 204.471 397.396 204.318 397.781 204.109  c
397.781 205.141 l
397.385 205.297 396.984 205.419 396.578 205.508  c
396.172 205.596 395.760 205.641 395.344 205.641  c
394.302 205.641 393.474 205.336 392.859 204.727  c
392.245 204.117 391.938 203.292 391.938 202.250  c
391.938 201.177 392.229 200.326 392.812 199.695  c
393.396 199.065 394.177 198.750 395.156 198.750  c
396.042 198.750 396.742 199.034 397.258 199.602  c
397.773 200.169 398.031 200.943 398.031 201.922  c
h
396.953 201.594 m
396.943 201.010 396.776 200.542 396.453 200.188  c
396.130 199.833 395.703 199.656 395.172 199.656  c
394.568 199.656 394.086 199.828 393.727 200.172  c
393.367 200.516 393.161 200.995 393.109 201.609  c
396.953 201.594 l
h
399.828 196.719 m
404.859 196.719 l
404.859 197.719 l
401.016 197.719 l
401.016 200.297 l
404.484 200.297 l
404.484 201.297 l
401.016 201.297 l
401.016 205.469 l
399.828 205.469 l
399.828 196.719 l
h
406.688 198.906 m
407.766 198.906 l
407.766 205.469 l
406.688 205.469 l
406.688 198.906 l
h
406.688 196.344 m
407.766 196.344 l
407.766 197.719 l
406.688 197.719 l
406.688 196.344 l
h
410.016 196.344 m
411.094 196.344 l
411.094 205.469 l
410.016 205.469 l
410.016 196.344 l
h
418.984 201.922 m
418.984 202.438 l
414.016 202.438 l
414.068 203.188 414.294 203.755 414.695 204.141  c
415.096 204.526 415.651 204.719 416.359 204.719  c
416.776 204.719 417.180 204.669 417.570 204.570  c
417.961 204.471 418.349 204.318 418.734 204.109  c
418.734 205.141 l
418.339 205.297 417.938 205.419 417.531 205.508  c
417.125 205.596 416.714 205.641 416.297 205.641  c
415.255 205.641 414.427 205.336 413.812 204.727  c
413.198 204.117 412.891 203.292 412.891 202.250  c
412.891 201.177 413.182 200.326 413.766 199.695  c
414.349 199.065 415.130 198.750 416.109 198.750  c
416.995 198.750 417.695 199.034 418.211 199.602  c
418.727 200.169 418.984 200.943 418.984 201.922  c
h
417.906 201.594 m
417.896 201.010 417.729 200.542 417.406 200.188  c
417.083 199.833 416.656 199.656 416.125 199.656  c
415.521 199.656 415.039 199.828 414.680 200.172  c
414.320 200.516 414.115 200.995 414.062 201.609  c
417.906 201.594 l
h
f
newpath
382.266 210.312 m
383.344 210.312 l
383.344 219.438 l
382.266 219.438 l
382.266 210.312 l
h
385.609 212.875 m
386.688 212.875 l
386.688 219.438 l
385.609 219.438 l
385.609 212.875 l
h
385.609 210.312 m
386.688 210.312 l
386.688 211.688 l
385.609 211.688 l
385.609 210.312 l
h
393.125 213.062 m
393.125 214.094 l
392.823 213.938 392.508 213.820 392.180 213.742  c
391.852 213.664 391.510 213.625 391.156 213.625  c
390.625 213.625 390.224 213.706 389.953 213.867  c
389.682 214.029 389.547 214.276 389.547 214.609  c
389.547 214.859 389.643 215.055 389.836 215.195  c
390.029 215.336 390.417 215.469 391.000 215.594  c
391.359 215.688 l
392.130 215.844 392.677 216.073 393.000 216.375  c
393.323 216.677 393.484 217.094 393.484 217.625  c
393.484 218.240 393.242 218.724 392.758 219.078  c
392.273 219.432 391.609 219.609 390.766 219.609  c
390.411 219.609 390.044 219.576 389.664 219.508  c
389.284 219.440 388.885 219.339 388.469 219.203  c
388.469 218.078 l
388.865 218.286 389.255 218.443 389.641 218.547  c
390.026 218.651 390.411 218.703 390.797 218.703  c
391.297 218.703 391.685 218.617 391.961 218.445  c
392.237 218.273 392.375 218.026 392.375 217.703  c
392.375 217.411 392.276 217.188 392.078 217.031  c
391.880 216.875 391.448 216.724 390.781 216.578  c
390.406 216.500 l
389.740 216.354 389.258 216.135 388.961 215.844  c
388.664 215.552 388.516 215.156 388.516 214.656  c
388.516 214.031 388.734 213.552 389.172 213.219  c
389.609 212.885 390.229 212.719 391.031 212.719  c
391.427 212.719 391.802 212.747 392.156 212.805  c
392.510 212.862 392.833 212.948 393.125 213.062  c
h
396.266 211.016 m
396.266 212.875 l
398.484 212.875 l
398.484 213.719 l
396.266 213.719 l
396.266 217.281 l
396.266 217.812 396.339 218.154 396.484 218.305  c
396.630 218.456 396.927 218.531 397.375 218.531  c
398.484 218.531 l
398.484 219.438 l
397.375 219.438 l
396.542 219.438 395.966 219.281 395.648 218.969  c
395.331 218.656 395.172 218.094 395.172 217.281  c
395.172 213.719 l
394.391 213.719 l
394.391 212.875 l
395.172 212.875 l
395.172 211.016 l
396.266 211.016 l
h
f
newpath
376.500 227.844 m
376.500 224.281 l
377.578 224.281 l
377.578 233.406 l
376.500 233.406 l
376.500 232.422 l
376.271 232.807 375.984 233.096 375.641 233.289  c
375.297 233.482 374.880 233.578 374.391 233.578  c
373.599 233.578 372.953 233.260 372.453 232.625  c
371.953 231.990 371.703 231.156 371.703 230.125  c
371.703 229.094 371.953 228.263 372.453 227.633  c
372.953 227.003 373.599 226.688 374.391 226.688  c
374.880 226.688 375.297 226.781 375.641 226.969  c
375.984 227.156 376.271 227.448 376.500 227.844  c
h
372.828 230.125 m
372.828 230.917 372.990 231.539 373.312 231.992  c
373.635 232.445 374.083 232.672 374.656 232.672  c
375.229 232.672 375.680 232.445 376.008 231.992  c
376.336 231.539 376.500 230.917 376.500 230.125  c
376.500 229.333 376.336 228.714 376.008 228.266  c
375.680 227.818 375.229 227.594 374.656 227.594  c
374.083 227.594 373.635 227.818 373.312 228.266  c
372.990 228.714 372.828 229.333 372.828 230.125  c
h
385.422 229.859 m
385.422 230.375 l
380.453 230.375 l
380.505 231.125 380.732 231.693 381.133 232.078  c
381.534 232.464 382.089 232.656 382.797 232.656  c
383.214 232.656 383.617 232.607 384.008 232.508  c
384.398 232.409 384.786 232.255 385.172 232.047  c
385.172 233.078 l
384.776 233.234 384.375 233.357 383.969 233.445  c
383.562 233.534 383.151 233.578 382.734 233.578  c
381.693 233.578 380.865 233.273 380.250 232.664  c
379.635 232.055 379.328 231.229 379.328 230.188  c
379.328 229.115 379.620 228.263 380.203 227.633  c
380.786 227.003 381.568 226.688 382.547 226.688  c
383.432 226.688 384.133 226.971 384.648 227.539  c
385.164 228.107 385.422 228.880 385.422 229.859  c
h
384.344 229.531 m
384.333 228.948 384.167 228.479 383.844 228.125  c
383.521 227.771 383.094 227.594 382.562 227.594  c
381.958 227.594 381.477 227.766 381.117 228.109  c
380.758 228.453 380.552 228.932 380.500 229.547  c
384.344 229.531 l
h
387.172 224.281 m
388.250 224.281 l
388.250 233.406 l
387.172 233.406 l
387.172 224.281 l
h
396.141 229.859 m
396.141 230.375 l
391.172 230.375 l
391.224 231.125 391.451 231.693 391.852 232.078  c
392.253 232.464 392.807 232.656 393.516 232.656  c
393.932 232.656 394.336 232.607 394.727 232.508  c
395.117 232.409 395.505 232.255 395.891 232.047  c
395.891 233.078 l
395.495 233.234 395.094 233.357 394.688 233.445  c
394.281 233.534 393.870 233.578 393.453 233.578  c
392.411 233.578 391.583 233.273 390.969 232.664  c
390.354 232.055 390.047 231.229 390.047 230.188  c
390.047 229.115 390.339 228.263 390.922 227.633  c
391.505 227.003 392.286 226.688 393.266 226.688  c
394.151 226.688 394.852 226.971 395.367 227.539  c
395.883 228.107 396.141 228.880 396.141 229.859  c
h
395.062 229.531 m
395.052 228.948 394.885 228.479 394.562 228.125  c
394.240 227.771 393.812 227.594 393.281 227.594  c
392.677 227.594 392.195 227.766 391.836 228.109  c
391.477 228.453 391.271 228.932 391.219 229.547  c
395.062 229.531 l
h
398.969 224.984 m
398.969 226.844 l
401.188 226.844 l
401.188 227.688 l
398.969 227.688 l
398.969 231.250 l
398.969 231.781 399.042 232.122 399.188 232.273  c
399.333 232.424 399.630 232.500 400.078 232.500  c
401.188 232.500 l
401.188 233.406 l
400.078 233.406 l
399.245 233.406 398.669 233.250 398.352 232.938  c
398.034 232.625 397.875 232.062 397.875 231.250  c
397.875 227.688 l
397.094 227.688 l
397.094 226.844 l
397.875 226.844 l
397.875 224.984 l
398.969 224.984 l
h
408.219 229.859 m
408.219 230.375 l
403.250 230.375 l
403.302 231.125 403.529 231.693 403.930 232.078  c
404.331 232.464 404.885 232.656 405.594 232.656  c
406.010 232.656 406.414 232.607 406.805 232.508  c
407.195 232.409 407.583 232.255 407.969 232.047  c
407.969 233.078 l
407.573 233.234 407.172 233.357 406.766 233.445  c
406.359 233.534 405.948 233.578 405.531 233.578  c
404.490 233.578 403.661 233.273 403.047 232.664  c
402.432 232.055 402.125 231.229 402.125 230.188  c
402.125 229.115 402.417 228.263 403.000 227.633  c
403.583 227.003 404.365 226.688 405.344 226.688  c
406.229 226.688 406.930 226.971 407.445 227.539  c
407.961 228.107 408.219 228.880 408.219 229.859  c
h
407.141 229.531 m
407.130 228.948 406.964 228.479 406.641 228.125  c
406.318 227.771 405.891 227.594 405.359 227.594  c
404.755 227.594 404.273 227.766 403.914 228.109  c
403.555 228.453 403.349 228.932 403.297 229.547  c
407.141 229.531 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
